# Multi-stage build for GPU-optimized document processor
FROM nvidia/cuda:11.8-devel-ubuntu22.04 as builder

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
	python3 \
	python3-pip \
	python3-dev \
	curl \
	wget \
	git \
	build-essential \
	&& rm -rf /var/lib/apt/lists/*

# Create symlink for python
RUN ln -s /usr/bin/python3 /usr/bin/python

# Upgrade pip
RUN python -m pip install --upgrade pip

# Copy requirements and install GPU-specific versions
COPY requirements.gpu.txt .
RUN pip install --no-cache-dir -r requirements.gpu.txt

# Production stage
FROM nvidia/cuda:11.8-runtime-ubuntu22.04

# Set working directory
WORKDIR /app

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
	python3 \
	python3-pip \
	curl \
	libmagic1 \
	&& rm -rf /var/lib/apt/lists/*

# Create symlink for python
RUN ln -s /usr/bin/python3 /usr/bin/python

# Copy installed packages from builder
COPY --from=builder /usr/local/lib/python3.10 /usr/local/lib/python3.10
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY . .

# Create non-root user
RUN useradd --create-home --shell /bin/bash app \
	&& chown -R app:app /app
USER app

# Set GPU environment variables
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility
ENV CUDA_VISIBLE_DEVICES=0
ENV TORCH_CUDA_ARCH_LIST="6.0;6.1;7.0;7.5;8.0;8.6;8.9;9.0"

# Health check
HEALTHCHECK --interval=30s --timeout=15s --start-period=60s --retries=3 \
	CMD curl -f http://localhost:8011/health || exit 1

# Expose port
EXPOSE 8011

# Start application with GPU support
CMD ["python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8011"]